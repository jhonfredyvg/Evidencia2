name: CI/CD Pipeline

on:
  push:
    branches: [ main, Rama1 ]
  pull_request:
    branches: [ main, Rama1 ]

# Añade esta sección de permisos
permissions:
  contents: write  # Otorga permisos de escritura para contenido del repositorio

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest discover -s tests

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run scraper and save data
        run: python main.py
      - name: Commit and push CSV
        run: |
          # Configurar git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Encontrar el último archivo CSV generado
          CSV_FILE=$(ls laptops_*.csv | sort -V | tail -n 1)
          
          # Añadir el archivo CSV al repositorio
          git add "$CSV_FILE"
          
          # Commit con mensaje descriptivo
          git commit -m "Add latest scraping data: $CSV_FILE" || echo "No changes to commit"
          
          # Push de los cambios
          git push
      - uses: actions/upload-artifact@v3
        with:
          name: scraped-data
          path: datos/laptops_*.csv